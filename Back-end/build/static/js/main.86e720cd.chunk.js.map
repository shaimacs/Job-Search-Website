{"version":3,"sources":["Components/NavBar.js","Components/Card.js","Components/Uploader.js","Components/JobDetails.js","Components/CardsList.js","Components/Login.js","Components/AddJob.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","useState","placeHolder","setPlaceHolder","searchInput","setSearchInput","changePlaceHolder","text","searchJobs","reqURl","reqParams","axios","method","url","params","then","res","console","log","data","jobs","setJobsSearchList","catch","err","handleFilterClick","styles","width","type","Navbar","id","collapseOnSelect","expand","bg","variant","Brand","onClick","callAll","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","drop","title","Item","Divider","InputGroup","inside","style","Input","placeholder","value","onChange","e","Button","Icon","icon","Link","changePath","Card","Panel","toggleDrawer","shaded","bordered","bodyFill","display","src","imgUrl","alt","height","header","job","date","toString","slice","location","dropAreaImageStyle","dropAreaStyle","border","Uploader","setData","setErr","onDrop","preventDefault","files","dataTransfer","toggleText","length","reader","FileReader","size","includes","readAsDataURL","onload","loadEvt","target","result","onDragOver","event","JobDetails","show","setShow","setImgUrl","isEdit","setIsEdit","newTitle","setNewTitle","newDesc","setNewDesc","cv","setCv","setText","close","prevShow","filter","placement","toggleCv","prevCv","prevText","handleEdit","onEdit","_id","Description","open","funcName","Notification","description","handleClick","faves","onFaveToggle","useEffect","company","undefined","logo","pre","getLogo","ButtonToolbar","Drawer","onHide","Header","EmploymentType","Body","summary","Grid","fluid","Row","Col","xs","sm","md","skills","map","item","overflow","htmlFor","resize","row","col","Footer","FlexboxGrid","align","order","colspan","onDelete","CardsList","inputTestres","det","companies","Login","email","setEmail","password","setPassword","Container","Content","justify","Form","FormGroup","ControlLabel","FormControl","name","user","loged","appearance","AddJob","useForm","register","handleSubmit","errors","useHistory","setTitle","setLocation","setCompany","Department","setDeparment","setDate","setSummary","setEmploymentType","setDescription","skill","setSkill","ref","required","class","for","rows","newJob","split","post","status","alert","App","listOfJobs","setListOfJobs","path","setPath","setType","tempList","setTempList","jobsSearchList","setFaves","setFilter","inputTitle","setInputTitle","setCompanies","allow","setAllow","handleDelete","delete","filterList","newData","put","editItem","find","newList","prevFilter","handleFaveToggle","fave","jobIndex","indexOf","push","splice","prevFave","setFave","prev","get","cardlist1","p","search","exact","prevAllow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86e720cd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { InputGroup, Input, Icon } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport axios from 'axios';\r\n// destructure the state prop from props\r\nconst NavBar = (props) => {\r\n    const [placeHolder, setPlaceHolder] = useState('Title');\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const changePlaceHolder = (text) => {\r\n        setPlaceHolder(text);\r\n        setSearchInput('')\r\n    }\r\n    const searchJobs = () => {\r\n        let reqURl = '';\r\n        let reqParams = '';\r\n\r\n        if (placeHolder === \"Title\") { reqURl = '/api/jobs/jobs-by-job-title'; reqParams = { 'title': searchInput } }\r\n        else if (placeHolder === \"Location\") { reqURl = '/api/jobs/jobs-by-location'; reqParams = { 'location': searchInput } }\r\n        else if (placeHolder === \"Company\") { reqURl = '/api/jobs/jobs-by-company'; reqParams = { 'company': searchInput } }\r\n        axios({\r\n            method: 'GET',\r\n            url: reqURl,\r\n            params: reqParams,\r\n        }).then(res => {\r\n            console.log('result ', res.data.jobs);\r\n            // props.setListOfJobs(res.data.jobs);\r\n            props.setJobsSearchList(res.data.jobs);\r\n        })\r\n            .catch(err => console.log(err))\r\n        props.handleFilterClick('search')\r\n    }\r\n    const styles = {\r\n        width: 300\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.type === 'user' ?\r\n                <Navbar id='fixed-top' collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand onClick={() => props.callAll()} href=\"#home\">All Jobs</Navbar.Brand>\r\n                    <Navbar.Brand onClick={() => props.handleFilterClick('fav')} id='jobs' href=\"#home\">My Jobs</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\">\r\n                            <NavDropdown drop='down' title={placeHolder} id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={() => changePlaceHolder('Title')}>By Title</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={() => changePlaceHolder('Location')}>By Location</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={() => changePlaceHolder('Company')}>By Company</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <InputGroup inside style={styles}>\r\n                                <Input placeholder={`Search for Jobs By ${placeHolder}`} value={searchInput} onChange={(e) => setSearchInput(e)} />\r\n                                <InputGroup.Button onClick={searchJobs}>\r\n                                    <Icon icon=\"search\" />\r\n                                </InputGroup.Button>\r\n                            </InputGroup>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                :\r\n                <Navbar id='fixed-top' collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand onClick={() => props.callAll()} href=\"#home\">All Jobs</Navbar.Brand>\r\n                    <Navbar.Brand onClick={() => props.handleFilterClick('fav')} id='jobs' href=\"#home\">My Jobs</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link onClick={() => props.changePath('/add-job')} href='#home'>Add Job</Nav.Link>\r\n                            <NavDropdown drop='down' title={placeHolder} id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={() => changePlaceHolder('Title')}>By Title</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={() => changePlaceHolder('Location')}>By Location</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={() => changePlaceHolder('Company')}>By Company</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <InputGroup inside style={styles}>\r\n                                <Input placeholder={`Search for Jobs By ${placeHolder}`} value={searchInput} onChange={(e) => setSearchInput(e)} />\r\n                                <InputGroup.Button onClick={searchJobs}>\r\n                                    <Icon icon=\"search\" />\r\n                                </InputGroup.Button>\r\n                            </InputGroup>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","import React from 'react';\r\nimport { Panel } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <Panel onClick={props.toggleDrawer()} id='card' shaded bordered bodyFill style={{ display: 'inline-block', width: 240 }}>\r\n            <img src={props.imgUrl} alt='' height=\"240\" />\r\n            <Panel header={props.job.title}>\r\n                {props.job.date === null ?\r\n                    <p>\r\n                        No Date\r\n                </p>\r\n                    :\r\n                    <p>\r\n                        Date: <cite title={props.job.date.toString()}>{props.job.date.toString().slice(0, 10)}</cite>\r\n                    </p>\r\n                }\r\n                <footer className=\"blockquote-footer\">\r\n                    Saudi Arabia <cite title=\"Source Title\">{props.job.location}</cite>\r\n                </footer>\r\n            </Panel>\r\n        </Panel>\r\n    );\r\n}\r\nexport default Card;","import React, { useState } from \"react\";\r\n\r\nconst width = 300;\r\nconst height = 300;\r\nconst borderStyle = \"2px dotted #000\";\r\n\r\nconst dropAreaImageStyle = {\r\n    width,\r\n    height\r\n};\r\n\r\nconst dropAreaStyle = {\r\n    ...dropAreaImageStyle,\r\n    border: borderStyle\r\n};\r\n\r\nconst Uploader = (props) => {\r\n    const [data, setData] = useState(false);\r\n    const [err, setErr] = useState(false);\r\n    const onDrop = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            dataTransfer: { files }\r\n        } = e;\r\n        console.log(\"Files: \", files);\r\n        props.toggleText()\r\n        const { length } = files;\r\n        const reader = new FileReader();\r\n        if (length === 0) {\r\n            return false;\r\n        }\r\n        const fileTypes = [\r\n            // \"image/jpeg\",\r\n            \"application/pdf\",\r\n            // \"image/jpg\",\r\n            // \"image/png\"\r\n        ];\r\n        const { size, type } = files[0];\r\n        setData(false);\r\n        if (!fileTypes.includes(type)) {\r\n            setErr(\"File format must be pdf\");\r\n            return false;\r\n        }\r\n        if (size / 1024 / 1024 > 2) {\r\n            setErr(\"File size exceeded the limit of 2MB\");\r\n            return false;\r\n        }\r\n        setErr(false);\r\n\r\n        reader.readAsDataURL(files[0]);\r\n        reader.onload = (loadEvt) => {\r\n            setData(loadEvt.target.result);\r\n        };\r\n    };\r\n    const onDragStart = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    const onDelete = () => {\r\n        setData(false)\r\n        props.toggleText()\r\n    };\r\n    const onDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <div>\r\n            {err && <p>{err}</p>}\r\n            <div\r\n                style={dropAreaStyle}\r\n                onDrop={(e) => onDrop(e)}\r\n                onDragOver={(e) => onDragOver(e)}\r\n            >\r\n                {data && (\r\n                    <img\r\n                        style={dropAreaImageStyle}\r\n                        src={\r\n                            \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/PDF_file_icon.svg/1200px-PDF_file_icon.svg.png\"\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=\"button-wrapper\">\r\n                {data && <button onClick={(event) => onDelete()}>Remove</button>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Uploader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from './Card'\r\nimport Uploader from \"./Uploader\";\r\nimport { FlexboxGrid, Drawer, ButtonToolbar, Notification, Col, Row, Grid } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport { FiShare2, FiUpload, FiCheck, FiXCircle, FiTrash2, FiEdit } from \"react-icons/fi\";\r\nimport axios from 'axios';\r\n\r\nconst JobDetails = (props) => {\r\n    const [show, setShow] = useState(() => false)\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newDesc, setNewDesc] = useState('');\r\n    const [cv, setCv] = useState(() => false)\r\n    const [text, setText] = useState('Please Drag and Drop your CV');\r\n\r\n    const getLogo = () => {\r\n        let company = props.job.company;\r\n        console.log('cooooooooooomp', props.job.company)\r\n        axios({\r\n            method: 'GET',\r\n            url: '/api/companies/company-logo',\r\n            params: {\r\n                'company': company,\r\n            }\r\n        }).then(res => res.data.logo[0].logo === undefined ?\r\n            null\r\n            :\r\n            setImgUrl(pre => pre = res.data.logo[0].logo))\r\n            .catch(err => console.log(err))\r\n    }\r\n    const close = () => {\r\n        setShow(prevShow => prevShow = false)\r\n        props.filter === 'fav' ? console.log('k') : props.handleFilterClick('all')\r\n    }\r\n    const toggleDrawer = (placement) => {\r\n        setShow(prevShow => prevShow = true)\r\n        props.filter === 'fav' ? console.log('k') : props.handleFilterClick('det')\r\n\r\n    }\r\n    const toggleCv = () => {\r\n        setCv(prevCv => prevCv = !cv)\r\n    }\r\n    const toggleText = () => {\r\n        text === 'Please Drag and Drop your CV' ? setText(prevText => prevText = 'successfully uploaded')\r\n            : setText(prevText => prevText = 'Please Drag and Drop your CV')\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        props.onEdit(props.job._id, {\r\n            title: newTitle,\r\n            Description: newDesc,\r\n        })\r\n    }\r\n\r\n    const open = (funcName, placement) => {\r\n        funcName === \"success\" ?\r\n            Notification[funcName]({\r\n                title: funcName,\r\n                placement,\r\n                description: 'Copied to your clipboard'\r\n            })\r\n            :\r\n            Notification[funcName]({\r\n                title: funcName,\r\n                placement,\r\n                description: 'Upload your CV first'\r\n            });\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        text === 'successfully uploaded' || props.faves.includes(props.job) ? props.onFaveToggle(props.job) : open('error', 'topStart')\r\n\r\n    }\r\n    useEffect(() => {\r\n        getLogo()\r\n        console.log('woof woof222')\r\n    }, [props.filter])\r\n\r\n    return (\r\n        <div>\r\n            <ButtonToolbar>\r\n                <Card\r\n                    filter={props.filter}\r\n                    imgUrl={imgUrl}\r\n                    job={props.job}\r\n                    toggleDrawer={() => toggleDrawer}\r\n                ></Card>\r\n            </ButtonToolbar>\r\n            {props.type === 'user' ?\r\n                <Drawer\r\n                    id='drawer'\r\n                    show={show}\r\n                    onHide={close}\r\n                    size={'lg'}\r\n                    placement={'left'} \r\n                >\r\n                    <div id='drawer'>\r\n                        <Drawer.Header >\r\n                            <div className='imgAndName'>\r\n                                <img alt=\"\" className='imgCardTop' src={imgUrl} />\r\n                            </div>\r\n                            <div className='detailsbtn'>\r\n                                <h6>{props.job.title}</h6>\r\n                                <footer >\r\n                                    - {props.job.EmploymentType}\r\n                                </footer>\r\n                                <footer >\r\n                                    Saudi Arabia <cite title=\"Source Title\">{props.job.location}</cite>\r\n                                </footer>\r\n                            </div>\r\n                        </Drawer.Header>\r\n                        <Drawer.Body id='drawerBody'>\r\n                            <h4>Job Summary:</h4>\r\n                            <footer >\r\n                                {props.job.summary}\r\n                            </footer>\r\n                            <h4>Job Description:</h4>\r\n                            <div>\r\n                                <p>{props.job.Description}</p>\r\n                            </div>\r\n                            <Grid fluid>\r\n                                <Row className=\"show-grid\">\r\n                                    <Col xs={12} sm={12} md={12}>\r\n                                        <div>\r\n                                            <h4>Job Skills:</h4>\r\n                                            <ul>\r\n                                                {props.job.skills.map(function (item) {\r\n                                                    return <li key={item}>{item}</li>;\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xs={12} sm={12} md={12}>\r\n                                        {cv && !props.faves.includes(props.job) ? <div id='pdf'>\r\n                                            <h4>{text}</h4>\r\n                                            <Uploader toggleText={() => toggleText()} />\r\n                                        </div> : null}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Grid>\r\n                            <div className=\"row mx-0\" style={{ overflow: 'hidden' }}>\r\n                                {!isEdit ? null :\r\n                                    <div className=\"container\">\r\n                                        <div className=\"form\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"title\">Title</label>\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"title\" onChange={(e) => setNewTitle(e.target.value)} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"description\">Description</label>\r\n                                                <textarea type=\"text\" onChange={(e) => setNewDesc(e.target.value)} style={{ resize: 'none', height: '30vh' }} row={10} col={1} className=\"form-control\" placeholder=\"title\"></textarea>\r\n                                            </div>\r\n                                            <button className=\"btn btn-block btn-success\" onClick={handleEdit}>Edit</button>\r\n                                            <button className=\"btn btn-block btn-warning\" onClick={() => setIsEdit(false)}>Cancel</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </Drawer.Body>\r\n                        {props.faves.includes(props.job) ?\r\n                            <Drawer.Footer id='footer'>\r\n                                <FlexboxGrid align=\"middle\">\r\n                                    <FlexboxGrid.Item className='ft' order={2} colspan={2}>\r\n                                        <FiShare2 onClick={() => open('success', 'topStart')} />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft2' order={1} colspan={0}>\r\n                                        <div onClick={() => handleClick()}>\r\n                                            <FiXCircle />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft' order={3} colspan={20}>\r\n                                        <div onClick={() => toggleCv()}>\r\n                                            <FiUpload />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                            </Drawer.Footer>\r\n                            :\r\n                            <Drawer.Footer id='footer'>\r\n                                <FlexboxGrid align=\"middle\">\r\n                                    <FlexboxGrid.Item className='ft' order={2} colspan={2}>\r\n                                        <FiShare2 onClick={() => open('success', 'topStart')} />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft1' order={1} colspan={0}>\r\n                                        <div onClick={() => handleClick()}>\r\n                                            <FiCheck />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft' order={5} colspan={20}>\r\n                                        <div >\r\n                                            <FiUpload onClick={() => toggleCv()} cv={cv} toggleCv={() => toggleCv()} />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                            </Drawer.Footer>}\r\n                    </div>\r\n                </Drawer>\r\n                :\r\n                <Drawer\r\n                    id='drawer'\r\n                    show={show}\r\n                    onHide={close}\r\n                    size={'lg'}\r\n                    placement={'left'} \r\n                >\r\n                    <div id='drawer'>\r\n                        <Drawer.Header >\r\n                            <div className='imgAndName'>\r\n                                <img alt=\"\" className='imgCardTop' src={imgUrl} />\r\n                            </div>\r\n                            <div className='detailsbtn'>\r\n                                <h6>{props.job.title}</h6>\r\n                                <footer >\r\n                                    - {props.job.EmploymentType}\r\n                                </footer>\r\n                                <footer >\r\n                                    Saudi Arabia <cite title=\"Source Title\">{props.job.location}</cite>\r\n                                </footer>\r\n                            </div>\r\n                        </Drawer.Header>\r\n                        <Drawer.Body id='drawerBody'>\r\n                            <h4>Job Summary:</h4>\r\n                            <footer >\r\n                                {props.job.summary}\r\n                            </footer>\r\n                            <h4>Job Description:</h4>\r\n                            <div>\r\n                                <p>{props.job.Description}</p>\r\n                            </div>\r\n                            <Grid fluid>\r\n                                <Row className=\"show-grid\">\r\n                                    <Col xs={12} sm={12} md={12}>\r\n                                        <div>\r\n                                            <h4>Job Skills:</h4>\r\n                                            <ul>\r\n                                                {props.job.skills.map(function (item) {\r\n                                                    return <li key={item}>{item}</li>;\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xs={12} sm={12} md={12}>\r\n                                        {cv && !props.faves.includes(props.job) ? <div id='pdf'>\r\n                                            <h4>{text}</h4>\r\n                                            <Uploader toggleText={() => toggleText()} />\r\n                                        </div> : null}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Grid>\r\n                            <div className=\"row mx-0\" style={{ overflow: 'hidden' }}>\r\n                                {!isEdit ? null :\r\n                                    <div className=\"container\">\r\n                                        <div className=\"form\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"title\">Title</label>\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"title\" onChange={(e) => setNewTitle(e.target.value)} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"description\">Description</label>\r\n                                                <textarea type=\"text\" onChange={(e) => setNewDesc(e.target.value)} style={{ resize: 'none', height: '30vh' }} row={10} col={1} className=\"form-control\" placeholder=\"title\"></textarea>\r\n                                            </div>\r\n                                            <button className=\"btn btn-block btn-success\" onClick={handleEdit}>Edit</button>\r\n                                            <button className=\"btn btn-block btn-warning\" onClick={() => setIsEdit(false)}>Cancel</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </Drawer.Body>\r\n                        {props.faves.includes(props.job) ?\r\n                            <Drawer.Footer id='footer'>\r\n                                <FlexboxGrid align=\"middle\">\r\n                                    <FlexboxGrid.Item className='ft' order={2} colspan={2}>\r\n                                        <FiShare2 onClick={() => open('success', 'topStart')} />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft2' order={1} colspan={0}>\r\n                                        <div onClick={() => handleClick()}>\r\n                                            <FiXCircle />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft' order={3} colspan={20}>\r\n                                        <div onClick={() => toggleCv()}>\r\n                                            <FiUpload />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                            </Drawer.Footer>\r\n                            :\r\n                            <Drawer.Footer id='footer'>\r\n                                <FlexboxGrid align=\"middle\">\r\n                                    <FlexboxGrid.Item className='ft' order={2} colspan={2}>\r\n                                        <FiShare2 onClick={() => open('success', 'topStart')} />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft1' order={1} colspan={0}>\r\n                                        <div onClick={() => handleClick()}>\r\n                                            <FiCheck />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft' order={3} colspan={2}>\r\n                                        <div onClick={() => setIsEdit(!isEdit)}>\r\n                                            <FiEdit />\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft' order={4} colspan={16}>\r\n                                        <div onClick={() => { props.onDelete(props.job._id); close(); }}>\r\n                                            <FiTrash2></FiTrash2>\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item className='ft' order={5} colspan={2}>\r\n                                        <div>\r\n                                            <FiUpload onClick={() => toggleCv()} cv={cv} toggleCv={() => toggleCv()} />\r\n                                        </div>\r\n\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                            </Drawer.Footer>}\r\n                    </div>\r\n                </Drawer>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default JobDetails;","import React from 'react';\r\nimport JobDetails from './JobDetails'\r\n\r\nconst CardsList = (props) => {\r\n\r\n    const inputTestres = props.jobs.map((job) => {\r\n        return (\r\n            <JobDetails\r\n                type={props.type}\r\n                handleFilterClick={(det) => props.handleFilterClick(det)}\r\n                filter={props.filter}\r\n                onDelete={(id) => props.onDelete(id)}\r\n                onEdit={props.onEdit}\r\n                onFaveToggle={() => props.onFaveToggle(job)}\r\n                faves={props.faves}\r\n                job={job}\r\n                companies={props.companies}\r\n            />\r\n\r\n        )\r\n    })\r\n    return <div id='cardsContainer'>{inputTestres}</div>\r\n}\r\n\r\nexport default CardsList;","import React, { useState} from 'react';\r\nimport { Notification, Panel, FormControl, FormGroup, FlexboxGrid, Content, Navbar, Header, Container, Form, Button, ButtonToolbar, ControlLabel } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport NavBar from './NavBar'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState(() => '')\r\n    const [password, setPassword] = useState(() => '')\r\n    const open = (funcName, placement) => {\r\n        funcName === \"error\" ?\r\n            Notification[funcName]({\r\n                title: funcName,\r\n                placement,\r\n                description: 'Email Or Password is not correct'\r\n            })\r\n            :\r\n            Notification[funcName]({\r\n                title: funcName,\r\n                placement,\r\n                description: 'Make a new account lol'\r\n            });\r\n    }\r\n    const callLog = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: '/api/users/log-in',\r\n            params: {\r\n                'email': email,\r\n                'password': password,\r\n            }\r\n        }).then(res => res.data.user[0] === undefined ?\r\n            open('error', 'topStart')\r\n            :\r\n            props.loged(email==='user@gmail.com'?'user':'admin'))\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"show-fake-browser login-page\">\r\n             <Container id=\"login-body\">\r\n                <Header>\r\n                    <NavBar id='nav' />\r\n                </Header>\r\n                <Content id='navAdd1'>\r\n                    <FlexboxGrid justify=\"center\">\r\n                    <FlexboxGrid.Item colspan={12} className = \"show-fake\" >\r\n                            <Panel  header ={<h3 className=\"h3Login\">Login</h3>} bordered >\r\n                                <Form fluid>\r\n                                    <FormGroup>\r\n                                        <ControlLabel className=\"TextLogin\">Email address</ControlLabel>\r\n                                        <FormControl onChange={(e) => setEmail(e)} name=\"name\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <ControlLabel className=\"TextLogin\">Password</ControlLabel>\r\n                                        <FormControl onChange={(e) => setPassword(e)} name=\"password\" type=\"password\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <ButtonToolbar>\r\n                                            <Button className =\"Login-Button\" onClick={() => callLog()} appearance=\"primary\">Sign in</Button>\r\n                                            <Button onClick={() => open('info', 'topStart')} appearance=\"link\">Forgot password?</Button>\r\n                                        </ButtonToolbar>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </Panel>\r\n                        </FlexboxGrid.Item>\r\n                    </FlexboxGrid>\r\n                </Content>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default Login;","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport NavBar from './NavBar'\r\n\r\nconst AddJob = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [company, setCompany] = useState('Aramco');\r\n    const [Department, setDeparment] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [summary, setSummary] = useState('');\r\n    const [EmploymentType, setEmploymentType] = useState('');\r\n    const [Description, setDescription] = useState('');\r\n    const [skill, setSkill] = useState('');\r\n\r\n    const onHandleSubmit = (e) => {\r\n        const newJob = {\r\n            title,\r\n            location,\r\n            company,\r\n            Department,\r\n            date,\r\n            summary,\r\n            EmploymentType,\r\n            Description: Description.split('\\n'),\r\n            skills: skill.split('\\n'),\r\n        }\r\n        axios.post('/api/jobs/add-job', newJob)\r\n            .then(res => {\r\n                if (res.status == 200) {\r\n                    alert('job added');\r\n                    // history.push('/');\r\n                    props.changePath('/')\r\n                } else {\r\n                    alert('job not added')\r\n                }\r\n            })\r\n            .catch(err => console.log('erro in add job', err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar id='nav1' />\r\n            <div id='navAdd' className=\"container add-job-wrapper\">\r\n                <div className=\"row mx-0\">\r\n                    <div\r\n                        className=\"form bg-light border-rounded p-1 w-50 mx-auto my-2\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Title\" ref={register({ required: \"password Massage\" })}\r\n                                onChange={(e) => setTitle(e.target.value)} value={title}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"location\" className=\"text-capitalize\">location</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Location\" ref={register({ required: true })}\r\n                                onChange={(e) => setLocation(e.target.value)} value={location}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Company\" className=\"text-capitalize\">Company</label>\r\n                            <select ref={register({ required: true })} class=\"form-control\" onChange={(e) =>\r\n                                setCompany(e.target.value)} value={company}>\r\n                                <option value=\"Aramco\">Aramco</option>\r\n                                <option value=\"Sabic\">Sabic</option>\r\n                                <option value=\"Sasref\">Sasref</option>\r\n                                <option value=\"Tafeel\">Tafeel</option>\r\n                                <option value=\"SAMACO\">SAMACO</option>\r\n                                <option value=\"CEPCO\">CEPCO</option>\r\n                                <option value=\"RCC\">RCC</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Department\" className=\"text-capitalize\">Department</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Department\" ref={register({ required: true })}\r\n                                onChange={(e) => setDeparment(e.target.value)} value={Department}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"date\" className=\"text-capitalize\">date</label>\r\n                            <input type=\"date\" className=\"form-control\" placeholder=\"date\" ref={register({ required: true })}\r\n                                onChange={(e) => setDate(e.target.value)} value={date}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"summary\" className=\"text-capitalize\">summary</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"summary\" ref={register({ required: true })}\r\n                                onChange={(e) => setSummary(e.target.value)} value={summary}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"EmploymentType\">EmploymentType</label>\r\n                            <select class=\"form-control\" onChange={(e) =>\r\n                                setEmploymentType(e.target.value)} value={EmploymentType}>\r\n                                <option value=\"Full-Time\">Full-Time</option>\r\n                                <option value=\"Part-Time\">Part-Time</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"form-group\" ref={register({ required: true })}>\r\n                            <label ref={register({ required: true })} for=\"Description\">Description</label>\r\n                            <textarea class=\"form-control\" rows=\"3\" ref={register({ required: true })}\r\n                                onChange={(e) => setDescription(e.target.value)} value={Description}></textarea>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Skill\">skills</label>\r\n                            <textarea class=\"form-control\" rows=\"3\" ref={register({ required: true })}\r\n                                onChange={(e) => setSkill(e.target.value)} value={skill}></textarea>\r\n                        </div>\r\n                        <button className=\"btn btn-block btn-primary\" onClick={handleSubmit(onHandleSubmit)}>Add Job</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddJob;","import NavBar from './Components/NavBar'\r\nimport CardsList from './Components/CardsList'\r\nimport Login from './Components/Login'\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport AddJob from './Components/AddJob'\r\n\r\nfunction App() {\r\n  // state to store list of jobs\r\n  const [listOfJobs, setListOfJobs] = useState(() => []);\r\n  const [path, setPath] = useState(() => '/');\r\n  const [type, setType] = useState(() => '');\r\n\r\n  const [tempList, setTempList] = useState(() => []);\r\n  // const [Jobslocation, setJobslocation]= useState([]);\r\n  const [jobsSearchList, setJobsSearchList] = useState(() => []);\r\n\r\n  const [faves, setFaves] = useState(() => [])\r\n  const [filter, setFilter] = useState(() => 'all')\r\n\r\n\r\n  const [inputTitle, setInputTitle] = useState(() => '');\r\n  const [companies, setCompanies] = useState(() => []);\r\n\r\n\r\n  const [allow, setAllow] = useState(() => false);\r\n\r\n\r\n\r\n  // delete fetch request\r\n  const handleDelete = (id) => {\r\n    axios.delete(`/api/jobs/delete-job/${id}`)\r\n      .then(res => {\r\n        let filterList = tempList.filter(item => item._id !== id);\r\n        setListOfJobs(filterList);\r\n        setTempList(filterList);\r\n        handleFilterClick('del')\r\n      })\r\n      .catch(err => console.log('delete failed', err))\r\n  }\r\n\r\n  const handleEdit = (id, newData) => {\r\n    console.log(id, newData);\r\n    axios.put(`/api/jobs/update-job/${id}`, newData)\r\n      .then(res => {\r\n        let editItem = listOfJobs.find(item => item._id === id);\r\n        editItem.title = newData.title;\r\n        editItem.Description = newData.Description;\r\n\r\n        let newList = listOfJobs.map(item => item._id !== id ? item : editItem);\r\n        setListOfJobs(newList);\r\n      })\r\n      .catch(err => console.log('edit failed', err));\r\n  }\r\n  const handleFilterClick = (filter) => {\r\n    setFilter(prevFilter => prevFilter = filter)\r\n  }\r\n\r\n\r\n  const handleFaveToggle = (job) => {\r\n    const fave = faves.slice(0)\r\n    const jobIndex = fave.indexOf(job)\r\n    jobIndex === -1 ? fave.push(job) : fave.splice(jobIndex, 1)\r\n    setFaves(prevFave => prevFave = fave)\r\n  }\r\n\r\n  const setFave = () => {\r\n    setFaves(prevFave => prevFave = [])\r\n\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setInputTitle(e);\r\n  }\r\n\r\n  const callAll = () => {\r\n    changePath('/')\r\n    setJobsSearchList([])\r\n    handleFilterClick('all')\r\n  }\r\n\r\n\r\n  const callAllJobs = () => {\r\n    // fetch get reqest to /jobs\r\n    axios.get('/api/jobs/jobs')\r\n      .then(res => {\r\n        // store response date in state\r\n        setTempList(res.data.jobs);\r\n        setListOfJobs(res.data.jobs)\r\n      }\r\n\r\n      )\r\n      .catch(err => {\r\n        //if request fialed , log it to console\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const changePath = (path) => {\r\n    setPath(prev => prev = path)\r\n  }\r\n\r\n  const fetchComanies = () => {\r\n    axios.get('/api/companies/companies')\r\n      .then(res => setCompanies(res.data.companies))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const loged = (user) => {\r\n    setType(prev => prev = user)\r\n    setAllow(prevAllow => prevAllow = true)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    callAllJobs();\r\n  }, [inputTitle,path])\r\n\r\n\r\n  // will render only one time\r\n  useEffect(() => {\r\n    fetchComanies();\r\n  }, [])\r\n\r\n\r\n  /* if list is empty show no Jobs found, otherwise display list of jobs */\r\n  let cardlist1 = ((filter === 'all' || filter === 'det' || filter === 'del' || filter === 'search') ? (jobsSearchList.length > 0) ?\r\n    <CardsList type={type} handleFilterClick={(det) => handleFilterClick(det)} companies={companies} filter={filter} onDelete={(id) => handleDelete(id)} onEdit={handleEdit} setFave={() => setFave} faves={faves} onFaveToggle={handleFaveToggle} jobs={jobsSearchList} />\r\n    :\r\n    <CardsList type={type} handleFilterClick={(det) => handleFilterClick(det)} companies={companies} filter={filter} onDelete={(id) => handleDelete(id)} onEdit={handleEdit} setFave={() => setFave} faves={faves} onFaveToggle={handleFaveToggle} jobs={listOfJobs} />\r\n    :\r\n    <CardsList type={type} handleFilterClick={(det) => handleFilterClick(det)} filter={filter} setFave={() => setFave} faves={faves} onFaveToggle={handleFaveToggle} jobs={faves} />)\r\n\r\n  useEffect(() => {\r\n    handleFilterClick('all')\r\n    cardlist1 = ((filter === 'all' || filter === 'det' || filter === 'del' || filter === 'search') ? (jobsSearchList.length > 0) ?\r\n      <CardsList type={type} handleFilterClick={(det) => handleFilterClick(det)} companies={companies} filter={filter} onDelete={(id) => handleDelete(id)} onEdit={handleEdit} setFave={() => setFave} faves={faves} onFaveToggle={handleFaveToggle} jobs={jobsSearchList} />\r\n      :\r\n      <CardsList type={type} handleFilterClick={(det) => handleFilterClick(det)} companies={companies} filter={filter} onDelete={(id) => handleDelete(id)} onEdit={handleEdit} setFave={() => setFave} faves={faves} onFaveToggle={handleFaveToggle} jobs={listOfJobs} />\r\n      :\r\n      <CardsList type={type} handleFilterClick={(det) => handleFilterClick(det)} filter={filter} setFave={() => setFave} faves={faves} onFaveToggle={handleFaveToggle} jobs={faves} />)\r\n  }, [listOfJobs, jobsSearchList,path])\r\n\r\n  return (\r\n    <div >\r\n      {allow === true && path === '/' ?\r\n        <Router>\r\n          <NavBar type={type} changePath={(p) => changePath(p)} handleFilterClick={(search) => handleFilterClick(search)} setJobsSearchList={setJobsSearchList} setListOfJobs={setListOfJobs} handleFilterClick={handleFilterClick} callAll={() => callAll()} setInputTitle={setInputTitle} handleChange={handleChange} />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              {cardlist1}\r\n            </Route>\r\n            <Route exact path=\"/add-job\">\r\n              <AddJob />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n        :\r\n        allow === true && path === '/add-job' ?\r\n          <AddJob changePath={(p) => changePath(p)}/>\r\n          :\r\n          <Login loged={(user) => loged(user)} ></Login>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}